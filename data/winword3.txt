eax=130e1032 ebx=032616e8 ecx=130e1000 edx=0052efa8 esi=0052e418 edi=00000000
eip=692dba19 esp=001ac49c ebp=001ac4c8 iopl=0         nv up ei pl nz na po nc
cs=001b  ss=0023  ds=0023  es=0023  fs=003b  gs=0000             efl=00000202
EPSIMP32!RegisterPercentCallback+0x243e4:
692dba19 94              xchg    eax,esp


1. 
0:000> u eip
EPSIMP32!RegisterPercentCallback+0x243e4:
->692dba19 94              xchg    eax,esp
692dba1a c3              ret

eax, esp 교환 
eax = 001ac49c
esp = 130e1032

--------------------------------------------------------------------------------------------------------------------------
2. 
692dba19 94              xchg    eax,esp
->692dba1a c3              ret

스택
0:000> dd 130e1032
130e1032  6929c58a 6929c58a 00000000 00000000

6929c58a로 이동
eip = 6929c58a
esp = esp+4 = 130e1036

--------------------------------------------------------------------------------------------------------------------------
3.
0:000> u 6929c58a
EPSIMP32+0xc58a:
->6929c58a c20c00          ret     0Ch

스택
0:000> dd 130e1036
130e1036  6929c58a 00000000 00000000 692dba19
130e1046  692aa073 00000000 00000000 00000000

6929c58a로 이동
eip = 6929c58a
esp = esp+ 4 +0xC = 130e1046

--------------------------------------------------------------------------------------------------------------------------
4.
0:000> u 6929c58a
EPSIMP32+0xc58a:
->6929c58a c20c00          ret     0Ch

0:000> dd 130e1046
130e1046  692aa073 00000000 00000000 00000000
130e1056  775f49f5 130e3000 ffffffff 130e0200

692aa073로 이동
eip = 692aa073
esp = esp + 4 + 0xC = 130e1056

--------------------------------------------------------------------------------------------------------------------------
5. 
0:000> u 692aa073
EPSIMP32+0x1a073:
->692aa073 8b4114          mov     eax,dword ptr [ecx+14h]
692aa076 c3              ret

0:000> dd 130e1000+14
130e1014  000000d7 00000000 00000000 00000000

eax에 0xd7 대입
eax=0xd7

--------------------------------------------------------------------------------------------------------------------------
6.
0:000> u 692aa073
EPSIMP32+0x1a073:
692aa073 8b4114          mov     eax,dword ptr [ecx+14h]
->692aa076 c3              ret

0:000> dd 130e1056
130e1056  775f49f5 130e3000 ffffffff 130e0200

775f49f5으로 이동
eip = 775f49f5
esp = esp+4 = 130e105a

--------------------------------------------------------------------------------------------------------------------------
7.
0:000> u 775f49f5
ntdll!ZwCreateEvent+0x5:
->775f49f5 ba0003fe7f      mov     edx,offset SharedUserData!SystemCallStub (7ffe0300)
->775f49fa ff12            call    dword ptr [edx]
775f49fc c21400          ret     14h
775f49ff 90              nop

0:000> dd 7ffe0300
7ffe0300  775f64f0 775f64f4 00000000 00000000

edx가 7ffe0300되고, 거기에 있는 775f64f0를 call

--------------------------------------------------------------------------------------------------------------------------
8.
0:000> u 775f64f0
ntdll!KiFastSystemCall:
->775f64f0 8bd4            mov     edx,esp
->775f64f2 0f34            sysenter

edx = esp = 130e105a
현재 eax가 0xd7이므로 'NtProtectVirtualMemory' call

'NtProtectVirtualMemory' 의 arg들은 
ProcessHandle, *BaseAddress, NumberOfBytesToProtect, NewAccessProtection, OldAccessProtection 
이렇게 5가지.

현재 스택을 보면,

0:000> dd 130e105a
130e105a  130e3000 ffffffff 130e0200 130e0204
130e106a  00000040 130e0208 00000000 00000000

130e3000은 함수 끝나고 돌아올 ret주소가 되고,
BaseAddress를 130e0200로 해서 PAGE_EXECUTE_READWRITE(0x40) 권한을 줌

그리고 130e3000 이동
eip = 130e3000
esp = esp+4 = 130e105e

--------------------------------------------------------------------------------------------------------------------------
9.
0:000> u 130e3000
->130e3000 60              pushad
130e3001 64a100000000    mov     eax,dword ptr fs:[00000000h]

esp = esp-0x20 = 130e103e

--------------------------------------------------------------------------------------------------------------------------
10.
0:000> u 130e3000
130e3000 60              pushad
->130e3001 64a100000000    mov     eax,dword ptr fs:[00000000h]
->130e3007 8b4004          mov     eax,dword ptr [eax+4]

fs는 teb를 가르킴
0:000> !teb
TEB at 7ffde000
    ExceptionList:        001ac5b4
    StackBase:            001b0000
    StackLimit:           0018d000
    SubSystemTib:         00000000
    FiberData:            00001e00
...

eax = 1ac5b4

0:000> dd 1ac5b4
001ac5b4  001ac62c 692f0358 00000000 001ac5d0

eax = 692f0358 

--------------------------------------------------------------------------------------------------------------------------
11. 
130e300a 250000ffff      and     eax,0FFFF0000h
130e300f 6681384d5a      cmp     word ptr [eax],5A4Dh
130e3014 7517            jne     130e302d
...
130e302d 2d00000100      sub     eax,10000h
130e3032 ebdb            jmp     130e300f

eax = 692f0000

eax값의 주소에 'MZ'가 있으면 넘어가고, 
없으면 나올때까지 eax를 0x1000씩 감소하면서 계속 찾음

0:000> db 69290000
69290000  4d 5a 90 00 03 00 00 00-04 00 00 00 ff ff 00 00  MZ..............
69290010  b8 00 00 00 00 00 00 00-40 00 00 00 00 00 00 00  ........@.......

69290000에서 찾음.
eax = 69290000

--------------------------------------------------------------------------------------------------------------------------
12. 
130e3016 81783c00020000  cmp     dword ptr [eax+3Ch],200h
130e301d 730e            jae     130e302d

eax+3c에 있는 값이 0x200보다 큰 값이라면
다시 위로 돌아가서 eax를 0x1000를 감소하면서 'MZ'가 있는 다른 주소를 찾음

0:000> dd 69290000+3c
6929003c  000000f8 0eba1f0e cd09b400 4c01b821

eax+3c에 있는 값이 0xf8이므로 바로 통과

--------------------------------------------------------------------------------------------------------------------------
13.
130e301f 8b503c          mov     edx,dword ptr [eax+3Ch]
130e3022 03d0            add     edx,eax
130e3024 66813a5045      cmp     word ptr [edx],4550h
130e3029 7502            jne     130e302d
130e302b eb07            jmp     130e3034

edx = f8
edx = 692900f8

edx 값에 있는 값이 'PE'인지 확인

0:000> db 692900f8
692900f8  50 45 00 00 4c 01 04 00-4c 7a e5 55 00 00 00 00  PE..L...Lz.U....

'PE'가 있으므로 130e3034로 jump

--------------------------------------------------------------------------------------------------------------------------
14. 
0:000> u 130e3034
130e3034 8b7a1c          mov     edi,dword ptr [edx+1Ch]
130e3037 8b722c          mov     esi,dword ptr [edx+2Ch]
130e303a 03f0            add     esi,eax
130e303c 03fe            add     edi,esi

0:000> dd 692900f8+1c
69290114  00063200 00007e00 00000000 0005efcf
69290124  00001000 00065000 69290000 00001000

edi = 63200
esi = 1000

esi = esi + eax = 1000 + 69290000 = 69291000
edi = edi + esi = 63200 + 69291000 = 692F4200

--------------------------------------------------------------------------------------------------------------------------
15. 
130e303e 83ed04          sub     ebp,4
130e3041 8b4d00          mov     ecx,dword ptr [ebp]
130e3044 3bce            cmp     ecx,esi
130e3046 7218            jb      130e3060
..
130e3060 ebdc            jmp     130e303e
..

ebp = ebp - 4 = 001ac4c8 - 4 = 001ac4c4
0:000> dd 001ac4c4
001ac4c4  130e1000 001ac4ec 692b68d7 032616e8

ecx = 130e1000

ecx < esi -> 130e1000 < 69291000

130e3060로 jump


ebp를 4씩 계속 감소해가면서, 
그 값을 주소로 하는 곳에 있는 값이 69291000보다 큰 값이 나올때까지 반복.

0:000> dd 001ac4c8-2c
001ac49c  692c03d8 032616e8 03355c30 00000000
001ac4ac  00000000 00000000 03355c30 00000900
001ac4bc  00000000 00000027 130e1000 001ac4ec

0x2c만큼 감소했을 때,
69291000 보다 큰 값이 나옴

ebp = 001ac49c
ecx = 692c03d8

--------------------------------------------------------------------------------------------------------------------------
16.
130e3048 3bcf            cmp     ecx,edi
130e304a 7314            jae     130e3060

ecx >= edi -> 692c03d8 >= 692F4200
false 이므로 jmp 안함

--------------------------------------------------------------------------------------------------------------------------
17. 
130e304c 8079fdff        cmp     byte ptr [ecx-3],0FFh
130e3050 750e            jne     130e3060
130e3052 8079fe50        cmp     byte ptr [ecx-2],50h
130e3056 7508            jne     130e3060
130e3058 8079ff10        cmp     byte ptr [ecx-1],10h
130e305c 7502            jne     130e3060
130e305e eb02            jmp     130e3062

0:000> db 692c03d8-3
692c03d5  ff 50 10 3b c7 7f 03 83-c8 ff 89 45 ec 8d 45 e0  .P.;.......E..E.

[ecx-3] = 0xff
[ecx-2] = 0x50
[ecx-1] = 0x10
위 3조건을 다 만족하여서 130e3062로 jump

--------------------------------------------------------------------------------------------------------------------------
18. 
0:000> u 130e3062 
130e3062 896c2418        mov     dword ptr [esp+18h],ebp
130e3066 61              popad

[130e103e+18] = 001ac49c
esp = esp + 0x20 = 130e105e 

--------------------------------------------------------------------------------------------------------------------------
19. 
130e3067 87e1            xchg    esp,ecx
130e3069 60              pushad
130e306a 8bec            mov     ebp,esp
130e306c e800000000      call    130e3071

esp = 692c03d8
ecx = 130e105e 

esp = esp-0x20 = 692c03b8
ebp = 692c03b8

--------------------------------------------------------------------------------------------------------------------------
20. 
130e3071 8b3424          mov     esi,dword ptr [esp]
130e3074 8d642404        lea     esp,[esp+4]

pushad를 했으므로 현재 esp에는 edi값이 저장

esi = edi = 692F4200
esp = 692c03b8+4 = 692c03bc

--------------------------------------------------------------------------------------------------------------------------
21. 
130e3078 81ee71000000    sub     esi,71h
130e307e 81c6a0000000    add     esi,0A0h
130e3084 68dc000000      push    0DCh
130e3089 59              pop     ecx

esi = 692F4200- 71 + a0 = 692F422F
ecx = 0xDC

--------------------------------------------------------------------------------------------------------------------------
22. 
130e308a 8d3c8e          lea     edi,[esi+ecx*4]
130e308d 6a1f            push    1Fh
130e308f 58              pop     eax

edi = 692F422F+dc*4 = 692f459f
eax = 1f

--------------------------------------------------------------------------------------------------------------------------
23. 
130e3090 d12f            shr     dword ptr [edi],1
130e3092 d116            rcl     dword ptr [esi],1

0:000> dd 692f459f
692f459f  00000000 00000000 00000000 00000000

0:000> dd 692F422F
692f422f  00000000 00000000 00000000 00000000

--------------------------------------------------------------------------------------------------------------------------
24.
130e3094 83c604          add     esi,4
130e3097 48              dec     eax
130e3098 7506            jne     130e30a0

esi = esi+4 = 692F422F + 4 = 692F4233
eax = 1f - 1 = 1e

130e30a0로 이동

--------------------------------------------------------------------------------------------------------------------------
25.
0:000> u 130e30a0
130e30a0 7177            jno     130e3119

130e3119로 이동

--------------------------------------------------------------------------------------------------------------------------
26.
0:000> u 130e3119 L20
130e3119 fb              sti
130e311a c17782c4        sal     dword ptr [edi-7Eh],0C4h
130e311e 3e7cc5          ht jl   130e30e6
130e3121 22fe            and     bh,dh
130e3123 45              inc     ebp
130e3124 2afc            sub     bh,ah
130e3126 15682fafad      adc     eax,0ADAF2F68h
130e312b 64e1aa          loope   130e30d8
130e312e 45              inc     ebp
130e312f 7640            jbe     130e3171
130e3131 62627f          bound   esp,qword ptr [edx+7Fh]


여기서 부터 잘 모르겠습니다.
ht jl 의미도 잘 모르겠고, 

130e30e6으로 jmp 한다고 해도

0:000> u 130e30e6
130e30e6 292b            sub     dword ptr [ebx],ebp
130e30e8 2b740000        sub     esi,dword ptr [eax+eax]
130e30ec 0080451e92c1    add     byte ptr [eax-3E6DE1BBh],al
130e30f2 e301            jecxz   130e30f5
130e30f4 c1737e5c        sal     dword ptr [ebx+7Eh],5Ch
130e30f8 aa              stos    byte ptr es:[edi]
130e30f9 aa              stos    byte ptr es:[edi]
130e30fa aa              stos    byte ptr es:[edi]

의미없는 instruction들인것 처럼 보입니다.





